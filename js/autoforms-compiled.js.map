{"version":3,"sources":["autoforms.js"],"names":[],"mappings":"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","file":"autoforms-compiled.js","sourcesContent":["/*\n *     Copyright (c) 2016. Dmitriy Gajewski\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/* 1.00\n\n Plugin is designed to automatically validate the form when you hover on submit associated with this form\n For proper operation of the script, you need to add the type of validation attribute 'data-field-type' to fields.\n Optional fields are marked with attribute data-required = 'false'.\n\n *\n *  Usage: autoform.init(htmlObject,options)\n *\n *  valid values for data-field-type:\n *  text-all - validate any text\n *  text-url - validate only latin symbols\n *  date - validate only numbers and separators\n *  phone - validate only numbers\n *  maskphone - validate only numbers and ()/+\n *  radio - validate only if one of radios in group is selected\n *  e-mail - validate only if input value contains @ and . symbols\n *  checkbox - validate only if checked\n *\n *  */\n\n\"use strict\";\n\nconst AUTOFORM_FIELD_INVALID_CLASS = \"autoform-invalid\";\nconst AUTOFORM_FORM_INVALID_CLASS = \"autoform-form-invalid\";\nconst AUTOFORM_SUBMIT_INVALID_CLASS = \"autoform-submit-invalid\";\nconst AUTOFORM_KEYERROR_CLASS = \"keyerr\";\nconst AUTOFORM_KEYERROR_WRAP_CLASS = \"autoforms_errors\";\n\nclass Field {\n    /**\n     * Field class describes single field.\n     * @param node\n     * @param autoForm\n     */\n\n    constructor(node,autoForm) {\n        var currentField = this;\n        currentField._node = node;\n        currentField._data = node.dataset;\n        currentField.empty = false;\n        currentField.valid = false;\n        currentField._autoForm = autoForm;\n        currentField.addFieldActions();\n    }\n\n    /**\n     * Method adds event listeners to field\n     */\n    addFieldActions() {\n        var currentField = this;\n        let allowAllSymbols = false,\n            checkString,\n            keyErrWrap,\n            additionalValidation = true;\n\n        currentField._node.addEventListener(\"keyup\",() => currentField._autoForm.updateState());\n        currentField._node.addEventListener(\"change\",() => currentField._autoForm.updateState());\n        currentField._node.addEventListener(\"click\", function () {\n            currentField._autoForm.updateState();\n            if (document.querySelector(currentField._autoForm.options.ErrorMsgContainer)) {\n                document.querySelectorAll(currentField._autoForm.options.ErrorMsgContainer).innerHTML = \"\";\n            }\n\n            this.classList.remove(AUTOFORM_FIELD_INVALID_CLASS);\n        });\n        currentField._node.addEventListener(\"keypress\", function (evt) {\n            let invalidKeyErrorMsg = \"Unvalid char\";\n            if ((evt.keyCode === 13)&&(currentField._autoForm.submit.attributes.disabled !== 'disabled')&&(this.tagName!==\"TEXTAREA\")) {\n                currentField._autoForm.submit.click();\n            }\n\n            if (currentField._autoForm.options.Validators[currentField._data.fieldType].keypressValidatorFunction) {\n                additionalValidation = currentField._autoForm.options.Validators[currentField._data.fieldType].keypressValidatorFunction(currentField)\n            }\n            if (currentField._autoForm.options.Validators[currentField._data.fieldType].keys) {\n                checkString = currentField._autoForm.options.Validators[currentField._data.fieldType].keys\n            } else {\n                allowAllSymbols = true;\n            }\n\n            if (additionalValidation && (!allowAllSymbols) && (checkString.search(evt.which) === -1)) {\n                evt.preventDefault();\n                if (currentField._autoForm.options.InvalidKeyErrorMsg) {\n                    if (currentField._data.keyerrwrapid) {\n                        keyErrWrap = document.querySelector(\".\" + currentField._data.keyerrwrapid);\n                    } else {\n                        keyErrWrap = document.querySelector(\".\"+AUTOFORM_KEYERROR_WRAP_CLASS);\n                        if (keyErrWrap) {\n                            document.querySelector(currentField._autoForm.options.ErrorMsgContainer).innerHTML = '<div class=\"'+AUTOFORM_KEYERROR_WRAP_CLASS+'\" style=\"opacity: 0\"></div>';\n                            keyErrWrap = document.querySelector(\".\"+AUTOFORM_KEYERROR_WRAP_CLASS);\n                        }\n                    }\n\n                    keyErrWrap.style.opacity = 1;\n                    if (keyErrWrap.querySelector(\".\"+AUTOFORM_KEYERROR_CLASS)) {\n                        keyErrWrap.innerHTML = keyErrWrap.innerHTML + '<span class=\"'+AUTOFORM_KEYERROR_CLASS+'\" style=\"opacity: 1\">' + invalidKeyErrorMsg + '</span>';\n                        setTimeout(function () {\n                            keyErrWrap.querySelectorAll(\".\"+AUTOFORM_KEYERROR_CLASS).style.opacity = 0;\n                            keyErrWrap.querySelectorAll(\".\"+AUTOFORM_KEYERROR_CLASS).remove();\n                        }, 900);\n                    }\n\n                }\n                return false;\n            } else {\n                if (currentField._autoForm.options.InvalidKeyErrorMsg&&currentField._data.keyerrwrapid) {\n                    if (document.querySelectorAll(\".\"+AUTOFORM_KEYERROR_WRAP_CLASS+\" .\"+AUTOFORM_KEYERROR_CLASS)) {\n                        document.querySelectorAll(\".\"+AUTOFORM_KEYERROR_WRAP_CLASS+\" .\"+AUTOFORM_KEYERROR_CLASS).style.opacity = 0;\n                        document.querySelectorAll(\".\"+AUTOFORM_KEYERROR_WRAP_CLASS+\" .\"+AUTOFORM_KEYERROR_CLASS).remove();\n                    }\n\n                }\n            }\n        });\n\n        if (currentField._autoForm.options.PositiveValidation) {\n            currentField._node.addEventListener(\"focusout\", function(){\n                if (currentField.validate()) {\n                    currentField._node.classList.add(\"valid\");\n                }\n            });\n            currentField._node.addEventListener(\"focusin\", function(){\n                currentField._node.classList.remove(\"valid\");\n            });\n        }\n    }\n\n    /**\n     * Method validates single field\n     * @returns {boolean|*}\n     */\n    validate() {\n        var _this = this;\n        _this.empty = _this._node.value === \"\";\n        if (!_this.empty ) { // if field is not empty\n            if (_this._autoForm.options.Validators[_this._data.fieldType]) {\n                if (_this._autoForm.options.Validators[_this._data.fieldType].validatorFunction) {\n                    _this.valid = _this._autoForm.options.Validators[_this._data.fieldType].validatorFunction(_this);\n                } else {\n                    _this.valid = true;\n                }\n            } else {\n                _this.valid = true;\n            }\n            if (_this._data.crossValid) {\n                if (document.querySelector(\"#\"+_this._data.crossValid).value !== \"\") _this.valid = true;\n            }\n            return _this.valid;\n        }\n        else {\n            if ((_this._data.required !== true)&&(_this._data.required !== undefined)) {\n                _this.valid = true;\n                return _this.valid;\n            }\n            else {\n                _this._autoForm.errorString = \"Fill up required fields\";\n                _this.valid = false;\n                if (_this._data.crossValid) {\n                    if (document.querySelector(\"#\"+_this._data.crossValid).value !== \"\") _this.valid = true;\n                }\n                return _this.valid;\n            }\n        }\n    };\n}\n\n/**\n * AutoForm class constructor. Accepts html node as first argument (usually form element, but can be any of its parents to)\n * @param htmlElementNode\n * @param options\n * @constructor\n */\n\nclass AutoForm {\n    constructor(htmlElementNode, options) {\n        var thisAutoForm = this;\n\n        this.options = {\n            Validators         : {\n                \"text-all\": {\n                    \"keys\":\"\",\n                    \"errorMessage\":\"\",\n                    \"validatorFunction\":false,\n                    \"keypressValidatorFunction\":false\n                },\n                \"text-url\": {\n                    \"keys\":\"13 49 50 51 52 53 54 55 56 57 48 45 61 95 43 113 119 101 114 116 121 117 105 111 112 91 93 97 115 100 102 103 104 106 107 108 59 39 122 120 99 118 98 110 109 44 46 47 81 87 69 82 84 89 85 73 79 80 123 125 124 65 83 68 70 71 72 74 75 76 58 90 88 67 86 66 78 77 60 62 63\",\n                    \"errorMessage\":\"Type only latin\",\n                    \"validatorFunction\":false,\n                    \"keypressValidatorFunction\":false\n                },\n                \"date\": {\n                    \"keys\":\"13 47 46 49 50 51 52 53 54 55 56 57 48\",\n                    \"errorMessage\":\"Type only numbers and delimiters\",\n                    \"validatorFunction\":false,\n                    \"keypressValidatorFunction\": function (field) {\n                        return (field._node.value.length < 10)\n                    }\n                },\n                \"phone\": {\n                    \"keys\":\"40 41 43 45 13 48 49 50 51 52 53 54 55 56 57 40 41 45\",\n                    \"errorMessage\":\"Type only numbers\",\n                    \"validatorFunction\":false,\n                    \"keypressValidatorFunction\":false\n                },\n                \"radio\": {\n                    \"keys\":\"\",\n                    \"errorMessage\":\"\",\n                    \"validatorFunction\":function (field) {\n                        return field._autoForm.querySelector(\"input[name='\"+field._node.getAttribute(\"name\")+\"']:checked\").value != undefined||(!field._data.required)\n                    },\n                    \"keypressValidatorFunction\":false\n                },\n                \"email\": {\n                    \"keys\":\"13 48 49 50 51 52 53 54 55 56 57 46 64 113 119 101 114 116 121 117 105 111 112 97 115 100 102 103 104 106 107 108 122 120 99 118 98 110 109 45 81 87 69 82 84 89 85 73 79 80 65 83 68 70 71 72 74 75 76 90 88 67 86 66 78 77\",\n                    \"errorMessage\":\"Type only latin\",\n                    \"validatorFunction\":function (field) {\n                        let valid = false;\n                        valid = ((String(field._node.value).indexOf(\"@\") > -1) && (String(field._node.value).indexOf(\".\") > -1));\n                        if (!valid) { field._autoForm.errorString = \"incorrect email\"; }\n                        return valid;\n                    },\n                    \"keypressValidatorFunction\":false\n                },\n                \"checkbox\": {\n                    \"keys\":\"\",\n                    \"errorMessage\":\"\",\n                    \"validatorFunction\":false,\n                    \"keypressValidatorFunction\":false\n                },\n                \"number\": {\n                    \"keys\":\"48 49 50 51 52 53 54 55 56 57\",\n                    \"errorMessage\":\"Type only numbers\",\n                    \"validatorFunction\":false,\n                    \"keypressValidatorFunction\":false\n                }\n            },\n            ShowErrorMsg       : options.ShowErrorMsg||false,\n            ErrorMsgContainer  : options.ErrorMsgContainer||\".autoforms-errors\",\n            EnableAnimations   : options.EnableAnimations||true,\n            DeactivateSubmit   : options.DeactivateSubmit||true,\n            FormInvalidClass   : options.FormInvalidClass||true,\n            InvalidKeyErrorMsg : options.InvalidKeyErrorMsg||true,\n            InvalidKeyTimeout  : options.InvalidKeyTimeout||1000,\n            CancelButton       : options.CancelButton||\".cancel\",\n            CancelErrorMsg     : options.CancelErrorMsg||false,\n            PositiveValidation : options.PositiveValidation||true\n        };\n        Object.assign(this.options.Validators, options.Validators);\n        this.valid = false;\n        this._node = htmlElementNode;\n       // this.errorString = \"\";\n        this.submit = this._node.querySelector('input[type=\"submit\"]').length < 1?document.querySelector('input[form=\"' + this._node.id + '\"]'):this._node.querySelector('input[type=\"submit\"]');\n        this.fields = [];\n        let fields = this._node.querySelectorAll('input[type=\"text\"], input[type=\"password\"], input[type=\"checkbox\"], input[type=\"radio\"], select, textarea, input[type=\"text\"][form=\"' + this._node.id + '\"], select[form=\"' + this._node.id + '\"], input[type=\"radio\"][form=\"' + this._node.id + '\"]');\n\n        for (let field of fields) {\n            this.fields.push(new Field(field,thisAutoForm));\n        }\n    }\n\n    /**\n     * Checks all fields of form. If at least one field is not valid (validate() method returns false) returns false\n     * @returns {boolean}\n     */\n    validate() {\n        var _this = this;\n        _this.valid = true;\n        for (let field of _this.fields) {\n            if (!field.validate()) {\n                _this.valid = false;\n            }\n        }\n        return _this.valid;\n    };\n\n    /**\n     * This method run actions that changes form states\n     */\n    updateState() {\n        var _this = this;\n        if (_this.validate()) {\n            if (_this.options.FormInvalidClass) {\n                _this._node.classList.remove(AUTOFORM_FORM_INVALID_CLASS);\n            }\n            if (_this.options.DeactivateSubmit) {\n                _this.submit.parentElement.classList.remove(AUTOFORM_SUBMIT_INVALID_CLASS);\n                _this.submit.removeAttribute(\"disabled\");\n            }\n        }\n        else {\n            if (_this.options.FormInvalidClass) {\n                _this._node.classList.add(AUTOFORM_FORM_INVALID_CLASS);\n            }\n            if (_this.options.DeactivateSubmit) {\n                _this.submit.parentElement.classList.add(AUTOFORM_SUBMIT_INVALID_CLASS);\n                _this.submit.setAttribute(\"disabled\",\"disabled\");\n            }\n        }\n    }\n\n\n    /**\n     * This method inits all events of form including field events and submit hover events\n     */\n    initEvents() {\n        var _this = this;\n\n        _this.submit.parentNode.addEventListener(\"mouseenter\", function () {\n            _this.highlightInvalidFields(\"on\");\n            if (_this.valid) {\n            }\n            else {\n                if (_this.options.ShowErrorMsg) {\n                    if (_this._node.getElementById(AUTOFORM_KEYERROR_WRAP_CLASS).length < 1) {\n                        _this._node.getElementById(_this.options.ErrorMsgContainer).innerHTML = '<div class=\"'+AUTOFORM_KEYERROR_WRAP_CLASS+'\" style=\"opacity: 0\"></div>';\n                    }\n                    if (_this.options.EnableAnimations) {\n                        _this._node.getElementById(AUTOFORM_KEYERROR_WRAP_CLASS).innerHTML = \"<span style='opacity:1'>\"+errorString+\"</span>\";\n                    }\n                    else {\n                        _this._node.getElementById(AUTOFORM_KEYERROR_WRAP_CLASS).innerHTML = \"<span style='opacity:1'>\"+errorString+\"</span>\";\n                    }\n                }\n            }\n        });\n        _this.submit.parentNode.addEventListener(\"mouseleave\", function () {\n            _this.highlightInvalidFields(\"off\");\n            if (_this.valid) {\n            }\n            if (_this.options.ShowErrorMsg) {\n                if (_this.options.EnableAnimations) {\n                    _this._node.getElementById(AUTOFORM_KEYERROR_WRAP_CLASS).style.opacity = 0;\n                }\n                else {\n                    _this._node.getElementById(AUTOFORM_KEYERROR_WRAP_CLASS).innerHTML = \"\";\n                }\n\n            }\n        });\n\n\n        if (_this.valid) {\n            if (_this.options.FormInvalidClass) {\n                _this._node.classList.remove(AUTOFORM_FORM_INVALID_CLASS);\n            }\n            if (_this.options.DeactivateSubmit) {\n                _this.submit.parentNode.classList.remove(AUTOFORM_SUBMIT_INVALID_CLASS);\n                if (_this.submit.attributes.disabled) {\n                    _this.submit.removeAttribute(\"disabled\");\n                }\n\n            }\n        }\n        else {\n            if (_this.options.FormInvalidClass) {\n                _this._node.classList.remove(AUTOFORM_FORM_INVALID_CLASS);\n            }\n            if (_this.options.DeactivateSubmit) {\n                _this.submit.parentNode.classList.add(AUTOFORM_SUBMIT_INVALID_CLASS);\n                _this.submit.setAttribute(\"disabled\",\"disabled\");\n            }\n        }\n\n        if (_this.options.CancelErrorMsg) {\n            document.querySelector(_this.options.CancelButton).addEventListener(\"mouseenter\", function () {\n                _this.errorString = \"Будут отменены все изменения!\";\n                if (document.getElementById(AUTOFORM_KEYERROR_WRAP_CLASS).length < 1) {\n                    document.getElementById(_this.options.ErrorMsgContainer).innerHTML = '<div id=\"'+AUTOFORM_KEYERROR_WRAP_CLASS+'\" style=\"opacity: 0\"></div>';\n                }\n                if (_this.options.EnableAnimations) {\n                    document.getElementById(AUTOFORM_KEYERROR_WRAP_CLASS).innerHTML = \"<span style='opacity:1'>\"+errorString+\"</span>\";\n                }\n                else {\n                    document.getElementById(AUTOFORM_KEYERROR_WRAP_CLASS).innerHTML = \"<span style='opacity:1'>\"+errorString+\"</span>\";\n                }\n            });\n            document.querySelector(_this.options.CancelButton).addEventListener(\"mouseleave\", function () {\n                _this. errorString = \"\";\n                if (_this.options.EnableAnimations) {\n                    document.getElementById(AUTOFORM_KEYERROR_WRAP_CLASS).style.opacity = 0;\n                }\n                else {\n                    document.getElementById(AUTOFORM_KEYERROR_WRAP_CLASS).innerHTML = \"\";\n                }\n            });\n        }\n    }\n\n    /**\n     * This method just highlighting invalid fields.\n     * @param opts (off|on) off - removes highlight class from fields\n     */\n    highlightInvalidFields(opts) {\n        var _this = this;\n        for (let field of _this.fields) {\n            if (opts !== \"off\") {\n                if (field.valid) {\n                    field._node.classList.remove(AUTOFORM_FIELD_INVALID_CLASS);\n                }\n                else {\n                    field._node.classList.add(AUTOFORM_FIELD_INVALID_CLASS);\n                }\n            }\n\n            if (opts === \"off\") {\n                field._node.classList.remove(AUTOFORM_FIELD_INVALID_CLASS);\n            }\n        }\n    };\n}\n\n\nwindow.autoform = {\n    widgets: {}, // all widgets with inited autoform\n    init: function (htmlElementNode, options) {\n        var aufm = this,\n\n            newElementName = (htmlElementNode.className+htmlElementNode.id).toLowerCase().replace(new RegExp(\"[^[a-zA-Z0-9]]*\",\"g\"),'_');\n\n        if (!options) options = {};\n\n        var newAufmWidget = aufm.widgets[newElementName] = new AutoForm(htmlElementNode, options);\n            newAufmWidget.initEvents();\n\n    }\n};"]}