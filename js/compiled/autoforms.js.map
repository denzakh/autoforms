{"version":3,"sources":["autoforms.js"],"names":[],"mappings":"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","file":"autoforms.js","sourcesContent":["/*\n *     Copyright (c) 2016. Dmitriy Gajewski\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\nconst AUTOFORM_FIELD_INVALID_CLASS = \"autoform-invalid\";\nconst AUTOFORM_FORM_INVALID_CLASS = \"autoform-form-invalid\";\nconst AUTOFORM_SUBMIT_INVALID_CLASS = \"autoform-submit-invalid\";\nconst AUTOFORM_KEYERROR_CLASS = \"keyerr\";\nconst AUTOFORM_HOVERED_ONCE = \"autoform-submit-hovered-once\";\nconst AUTOFORM_KEYERROR_WRAP_CLASS = \"autoforms_errors\";\nconst AUTOFORM_VALIDATE_ERRORS_WRAP_CLASS = \"autoforms_errors\";\nconst HTML5_INPUT_TYPES = [\"text\", \"password\", \"checkbox\", \"radio\", \"number\", \"color\", \"date\", \"datetime\", \"datetime-local\", \"email\", \"range\", \"search\", \"tel\", \"time\", \"url\", \"month\", \"week\"];\n\nclass ErrorMessage {\n    constructor(field) {\n        if (!field.empty) {\n            this.message = field.autoFormLink.options.Validators[field.type].errorMessage + \" \" + (field.nodeLink.dataset.name || field.nodeLink.name);\n        } else {\n            this.message = `${field.nodeLink.dataset.name || field.nodeLink.name} is empty`;\n        }\n        this.nodeLink = field.nodeLink;\n    }\n}\n\nclass Field {\n    /**\n     * Field class describes single field.\n     * @param node\n     * @param autoForm\n     */\n\n    constructor(node, autoForm) {\n        let currentField = this;\n        currentField.nodeLink = node;\n        node.autoformField = currentField;\n        currentField.dataOpts = node.dataset;\n        currentField.type = currentField.dataOpts.fieldType || (currentField.nodeLink.attributes.type ? currentField.nodeLink.attributes.type.value : \"text\");\n        currentField.empty = false;\n        currentField.valid = false;\n        currentField.autoFormLink = autoForm;\n        currentField.addFieldActions();\n    }\n\n    /**\n     * Method adds event listeners to field\n     */\n    addFieldActions() {\n        let currentField = this;\n        let allowAllSymbols = false,\n            checkString,\n            keyErrWrap,\n            additionalValidation = true;\n\n        currentField.nodeLink.addEventListener(\"keyup\", () => currentField.autoFormLink.updateState());\n        currentField.nodeLink.addEventListener(\"change\", () => currentField.autoFormLink.updateState());\n        currentField.nodeLink.addEventListener(\"click\", function () {\n            currentField.autoFormLink.updateState();\n            if (document.querySelector(currentField.autoFormLink.options.ErrorMsgContainer)) {\n                document.querySelectorAll(currentField.autoFormLink.options.ErrorMsgContainer).innerHTML = \"\";\n            }\n\n            this.classList.remove(AUTOFORM_FIELD_INVALID_CLASS);\n        });\n        currentField.nodeLink.addEventListener(\"keypress\", function (evt) {\n            //let invalidKeyErrorMsg = \"Unvalid char\";\n            if ((evt.keyCode === 13) && (currentField.autoFormLink.submit.attributes.disabled !== \"disabled\") && (this.tagName !== \"TEXTAREA\")) {\n                currentField.autoFormLink.submit.click();\n            }\n\n            if (currentField.autoFormLink.options.Validators[currentField.type].keypressValidatorFunction) {\n                additionalValidation = currentField.autoFormLink.options.Validators[currentField.type].keypressValidatorFunction(currentField);\n            }\n            if (currentField.autoFormLink.options.Validators[currentField.type].keys) {\n                checkString = currentField.autoFormLink.options.Validators[currentField.type].keys.split(\"\").map(\n                    function(char){\n                        return char.charCodeAt();\n                    }).join(\" \") + \" 8 9 10 13\";\n            } else {\n                allowAllSymbols = true;\n            }\n\n            if (additionalValidation && (!allowAllSymbols) && (checkString.search(evt.which) === -1)) {\n                evt.preventDefault();\n                if (currentField.autoFormLink.options.InvalidKeyErrorMsg) {\n                    if (currentField.dataOpts.keyerrwrapid) {\n                        keyErrWrap = document.querySelector(\".\" + currentField.dataOpts.keyerrwrapid);\n                    } else {\n                        keyErrWrap = document.querySelector(\".\" + AUTOFORM_KEYERROR_WRAP_CLASS);\n                        if (keyErrWrap) {\n                            document.querySelector(currentField.autoFormLink.options.ErrorMsgContainer).innerHTML = `<div class=\"${AUTOFORM_KEYERROR_WRAP_CLASS}\" style=\"opacity: 0\"></div>`;\n                            keyErrWrap = document.querySelector(\".\" + AUTOFORM_KEYERROR_WRAP_CLASS);\n                        }\n                    }\n                    if (keyErrWrap) {\n                        keyErrWrap.style.opacity = 1;\n                        if (keyErrWrap.querySelector(\".\" + AUTOFORM_KEYERROR_CLASS)) {\n                            keyErrWrap.innerHTML = keyErrWrap.innerHTML + `<span class=\"${AUTOFORM_KEYERROR_CLASS}\" style=\"opacity: 1\">\" + invalidKeyErrorMsg + \"</span>`;\n                            setTimeout(function () {\n                                keyErrWrap.querySelectorAll(\".\" + AUTOFORM_KEYERROR_CLASS).style.opacity = 0;\n                                keyErrWrap.querySelectorAll(\".\" + AUTOFORM_KEYERROR_CLASS).remove();\n                            }, 900);\n                        }\n                    }\n                }\n                return false;\n            } else {\n                if (currentField.autoFormLink.options.InvalidKeyErrorMsg && currentField.dataOpts.keyerrwrapid) {\n                    if (document.querySelectorAll(\".\" + AUTOFORM_KEYERROR_WRAP_CLASS + \" .\" + AUTOFORM_KEYERROR_CLASS)) {\n                        document.querySelectorAll(\".\" + AUTOFORM_KEYERROR_WRAP_CLASS + \" .\" + AUTOFORM_KEYERROR_CLASS).style.opacity = 0;\n                        document.querySelectorAll(\".\" + AUTOFORM_KEYERROR_WRAP_CLASS + \" .\" + AUTOFORM_KEYERROR_CLASS).remove();\n                    }\n\n                }\n            }\n        });\n\n        if (currentField.autoFormLink.options.PositiveValidation) {\n            currentField.nodeLink.addEventListener(\"focusout\", function () {\n                if (currentField.validate()) {\n                    currentField.nodeLink.classList.add(\"valid\");\n                    currentField.nodeLink.classList.remove(AUTOFORM_FIELD_INVALID_CLASS);\n                } else {\n                    if (currentField.autoFormLink.options.LeaveUnvalidHighlights && currentField.autoFormLink.nodeLink.classList.contains(AUTOFORM_HOVERED_ONCE)) {\n                        currentField.nodeLink.classList.add(AUTOFORM_FIELD_INVALID_CLASS);\n                    }\n                }\n            });\n            currentField.nodeLink.addEventListener(\"focusin\", function(){\n                currentField.nodeLink.classList.remove(\"valid\");\n            });\n        }\n    }\n\n    /**\n     * Method validates single field\n     * @param callFromGroup if called from group validator\n     * @returns {boolean|*}\n     */\n    validate(callFromGroup) {\n        let self = this;\n        self.empty = self.nodeLink.value === \"\";\n        if (!self.empty ) { // if field is not empty\n            if (self.autoFormLink.options.Validators[self.type]) {\n                if (self.autoFormLink.options.Validators[self.type].validatorFunction) {\n                    self.valid = self.autoFormLink.options.Validators[self.type].validatorFunction(self);\n                } else {\n                    self.valid = true;\n                }\n            } else {\n                self.valid = true;\n            }\n        }\n        else {\n            if ((self.dataOpts.required !== true) && (self.dataOpts.required !== undefined)) {\n                self.valid = true;\n            }\n            else {\n                self.autoFormLink.errorString = \"Fill up required fields\";\n                self.valid = false;\n            }\n        }\n        if (self.dataOpts.group && !callFromGroup) {\n            self.valid = self.autoFormLink.validateGroupWithOperator(self.dataOpts.group, self.dataOpts.groupValidateOperator);\n        }\n        return self.valid;\n    };\n}\n\n/**\n * AutoForm class constructor. Accepts html node as first argument (usually form element, but can be any of its parents to)\n * @param htmlElementNode\n * @param options\n * @constructor\n */\n\nclass AutoForm {\n    constructor(htmlElementNode, options) {\n        let thisAutoForm = this;\n\n        this.errorStack = [];\n        this.options = {\n            Validators: {\n                \"text\": {\n                    \"keys\": \"\",\n                    \"errorMessage\": \"Field is empty\",\n                    \"validatorFunction\": false,\n                    \"keypressValidatorFunction\": false\n                },\n                \"password\": {\n                    \"keys\": \"\",\n                    \"errorMessage\": \"Field is empty\",\n                    \"validatorFunction\": false,\n                    \"keypressValidatorFunction\": false\n                },\n                \"text-all\": {\n                    \"keys\": \"\",\n                    \"errorMessage\": \"Field is empty\",\n                    \"validatorFunction\": false,\n                    \"keypressValidatorFunction\": false\n                },\n                \"text-url\": {\n                    \"keys\": \"1234567890-=_+qwertyuiop[]asdfghjkl;\\\"zxcvbnm,./QWERTYUIOP{}|ASDFGHJKL:ZXCVBNM<>?\",\n                    \"errorMessage\": \"Type only latin\",\n                    \"validatorFunction\": false,\n                    \"keypressValidatorFunction\": false\n                },\n                \"url\": {\n                    \"keys\": \"1234567890-=_+qwertyuiop[]asdfghjkl;\\\"zxcvbnm,./QWERTYUIOP{}|ASDFGHJKL:ZXCVBNM<>?\",\n                    \"errorMessage\": \"Type only latin\",\n                    \"validatorFunction\": false,\n                    \"keypressValidatorFunction\": false\n                },\n                \"date\": {\n                    \"keys\": \"/.1234567890\",\n                    \"errorMessage\": \"Type only numbers and delimiters\",\n                    \"validatorFunction\": false,\n                    \"keypressValidatorFunction\": function (field) {\n                        return (field.nodeLink.value.length < 10);\n                    }\n                },\n                \"phone\": {\n                    \"keys\": \"()+-0123456789()-\",\n                    \"errorMessage\": \"Type only numbers\",\n                    \"validatorFunction\": false,\n                    \"keypressValidatorFunction\": false\n                },\n                \"radio\": {\n                    \"keys\": \"\",\n                    \"errorMessage\": \"Please check one of radiobuttons\",\n                    \"validatorFunction\": function validatorFunction(field) {\n                        let checkedVals = field.autoFormLink.nodeLink.querySelector(`input[name=\"${field.nodeLink.getAttribute(\"name\")}\"]:checked`);\n                        return checkedVals ? (checkedVals.value !== undefined || !field.dataOpts.required) : false;\n                    },\n                    \"keypressValidatorFunction\": false\n                },\n                \"select\": {\n                    \"keys\": \"\",\n                    \"errorMessage\": \"Select an element in dropdown\",\n                    \"validatorFunction\": false,\n                    \"keypressValidatorFunction\": false\n                },\n                \"email\": {\n                    \"keys\": \"0123456789.@qwertyuiopasdfghjklzxcvbnm-QWERTYUIOPASDFGHJKLZXCVBNM_\",\n                    \"errorMessage\": \"Email is not valid\",\n                    \"validatorFunction\": function (field) {\n                        return (/\\S+\\@\\S+\\.[a-z]+/i).test(field.nodeLink.value);\n                    },\n                    \"keypressValidatorFunction\": false\n                },\n                \"checkbox\": {\n                    \"keys\": \"\",\n                    \"errorMessage\": \"Please select checkbox\",\n                    \"validatorFunction\": function validatorFunction(field) {\n                        if (field.nodeLink.checked) {\n                            return true;\n                        }\n                        return typeof field.dataOpts.required !== \"undefined\";\n                    },\n                    \"keypressValidatorFunction\": false\n                },\n                \"number\": {\n                    \"keys\": \"0123456789\",\n                    \"errorMessage\": \"Type only numbers\",\n                    \"validatorFunction\": false,\n                    \"keypressValidatorFunction\": false\n                }\n            },\n            ShowErrorMsg: options.ShowErrorMsg || false,\n            ErrorMsgContainer: options.ErrorMsgContainer || \".autoforms-errors\",\n            EnableAnimations: options.EnableAnimations || true,\n            DeactivateSubmit: options.DeactivateSubmit || true,\n            FormInvalidClass: options.FormInvalidClass || true,\n            InvalidKeyErrorMsg: options.InvalidKeyErrorMsg || true,\n            InvalidKeyTimeout: options.InvalidKeyTimeout || 1000,\n            CancelButton: options.CancelButton || \".cancel\",\n            CancelErrorMsg: options.CancelErrorMsg || false,\n            PositiveValidation: options.PositiveValidation || true,\n            LeaveUnvalidHighlights: options.LeaveUnvalidHighlights || false\n        };\n        for (let key in options.Validators) {\n            if (options.Validators.hasOwnProperty(key)) {\n                this.options.Validators[key] = options.Validators[key];\n            }\n        }\n        this.valid = false;\n        this.nodeLink = htmlElementNode;\n        this.updateFields();\n        if (MutationObserver) {\n            let observer = new MutationObserver(function(mutations) {\n                let update = false;\n                mutations.forEach(function(mutation) {\n                    if (mutation.type === \"childList\" && mutation.target.classList[0] !== \"autoforms_errors\") {\n                        update = true;\n                        console.log(mutation);\n                    }\n                });\n\n                if (update) {\n                    thisAutoForm.updateFields();\n                }\n            });\n\n            observer.observe(htmlElementNode, {\n                attributes: true,\n                childList: true,\n                characterData: true,\n                subtree: true\n            });\n        }\n    }\n\n    /**\n     * updates fields list in object (you can call this method to update fields if form changed)\n     */\n    updateFields() {\n        let thisAutoForm = this;\n\n        this.submit = this.nodeLink.querySelector(\"input[type=\\\"submit\\\"]\") ||\n                      this.nodeLink.querySelector(\"button[type=\\\"submit\\\"]\") ||\n                      document.querySelector(`input[form=\"${this.nodeLink.id}\"]`) ||\n                      document.querySelector(`button[form=\"${this.nodeLink.id}\"]`) ||\n                      this.nodeLink.querySelector(\"button\");\n        this.fields = [];\n        let thisNodeId = this.nodeLink.id;\n        let fields = this.nodeLink.querySelectorAll(\n            (HTML5_INPUT_TYPES.map(function (fieldTypeHTML) {\n                return `input[type=\"${fieldTypeHTML}\"], input[type=\"${fieldTypeHTML}\"][form=\"${thisNodeId}\"]`;\n            }).join(\", \")) +\n            \", select, \" +\n            \"textarea, \" +\n            `select[form=\"${this.nodeLink.id}\"]`);\n\n        for (let field of fields) {\n            this.fields.push(new Field(field, thisAutoForm));\n        }\n    }\n\n    /**\n     * returns array of fields filtered by group\n     * @param groupName\n     * @returns {Array.<*>}\n     */\n    getFieldsByGroup(groupName) {\n        let thisAutoForm = this;\n        return thisAutoForm.fields.filter(function (field) {\n            return field.dataOpts.group === groupName;\n        });\n    }\n\n    /**\n     * Validate fields grouped by data-group attribute\n     * @param groupName\n     * @param operator validation operator (currently \"or\" or \"and\")\n     * @returns {boolean}\n     */\n    validateGroupWithOperator(groupName, operator) {\n        let thisAutoForm = this,\n            fields = thisAutoForm.getFieldsByGroup(groupName),\n            groupValid = false;\n        switch (operator) {\n            case \"or\": {\n                fields.forEach(function (field) {\n                    if (field.validate(true)) {\n                        groupValid = true;\n                    }\n                });\n            } break;\n            case \"and\": {\n                groupValid = true;\n                fields.forEach(function (field) {\n                    if (!field.validate(true)) {\n                        groupValid = false;\n                    }\n                });\n            } break;\n            default: {\n                groupValid = true;\n                fields.forEach(function (field) {\n                    if (!field.validate(true)) {\n                        groupValid = false;\n                    }\n                });\n            } break;\n        }\n\n        return groupValid;\n    }\n\n    /**\n     * Checks all fields of form. If at least one field is not valid (validate() method returns false) returns false\n     * @returns {boolean}\n     */\n    validate() {\n        let self = this;\n        self.errorStack = [];\n        self.valid = true;\n        for (let field of self.fields) {\n            if (!field.validate()) {\n                self.valid = false;\n                let addToStack = true;\n                let errorMessage = new ErrorMessage(field);\n                self.errorStack.forEach(function(err) {\n                    if (errorMessage.message === err.message) {\n                        addToStack = false;\n                    }\n                });\n                if (addToStack) {\n                    self.errorStack.push(errorMessage);\n                }\n            }\n        }\n        return self.valid;\n    };\n\n    /**\n     * This method run actions that changes form states\n     */\n    updateState() {\n        let self = this;\n        if (self.validate()) {\n            self.nodeLink.querySelector(`.${AUTOFORM_VALIDATE_ERRORS_WRAP_CLASS}`).innerHTML = \"\";\n            if (self.options.FormInvalidClass) {\n                self.nodeLink.classList.remove(AUTOFORM_FORM_INVALID_CLASS);\n            }\n            if (self.options.DeactivateSubmit) {\n                self.submit.parentElement.classList.remove(AUTOFORM_SUBMIT_INVALID_CLASS);\n                self.submit.removeAttribute(\"disabled\");\n            }\n        }\n        else {\n            self.nodeLink.querySelector(`.${AUTOFORM_VALIDATE_ERRORS_WRAP_CLASS}`).innerHTML = self.errorStack.map(function (err) {\n                return `<span class=\"error-message\">${err.message}</span><br>`;\n            }).join(\"\");\n            if (self.options.FormInvalidClass) {\n                self.nodeLink.classList.add(AUTOFORM_FORM_INVALID_CLASS);\n            }\n            if (self.options.DeactivateSubmit) {\n                self.submit.parentElement.classList.add(AUTOFORM_SUBMIT_INVALID_CLASS);\n                self.submit.setAttribute(\"disabled\", \"disabled\");\n            }\n        }\n    }\n\n\n    /**\n     * This method inits all events of form including field events and submit hover events\n     */\n    initEvents() {\n        let self = this;\n\n        self.submit.parentNode.addEventListener(\"mouseenter\", function () {\n            self.highlightInvalidFields(\"on\");\n            if (!self.nodeLink.classList.contains(AUTOFORM_HOVERED_ONCE)) {\n                self.nodeLink.classList.add(AUTOFORM_HOVERED_ONCE);\n            }\n            /*if (self.valid) {\n            }*/\n            else {\n                if (self.options.ShowErrorMsg) {\n                    if (self.nodeLink.getElementById(AUTOFORM_KEYERROR_WRAP_CLASS).length < 1) {\n                        self.nodeLink.getElementById(self.options.ErrorMsgContainer).innerHTML = `<div class=\"${AUTOFORM_KEYERROR_WRAP_CLASS}\" style=\"opacity: 0\"></div>`;\n                    }\n                    if (self.options.EnableAnimations) {\n                        self.nodeLink.getElementById(AUTOFORM_KEYERROR_WRAP_CLASS).innerHTML = `<span style=\"opacity:1\">${self.errorString}</span>`;\n                    }\n                    else {\n                        self.nodeLink.getElementById(AUTOFORM_KEYERROR_WRAP_CLASS).innerHTML = `<span style=\"opacity:1\">${self.errorString}</span>`;\n                    }\n                }\n            }\n        });\n        self.submit.parentNode.addEventListener(\"mouseleave\", function () {\n            if (!self.options.LeaveUnvalidHighlights) {\n                self.highlightInvalidFields(\"off\");\n            }\n            /*if (self.valid) {\n            }*/\n            if (self.options.ShowErrorMsg) {\n                if (self.options.EnableAnimations) {\n                    self.nodeLink.getElementById(AUTOFORM_KEYERROR_WRAP_CLASS).style.opacity = 0;\n                }\n                else {\n                    self.nodeLink.getElementById(AUTOFORM_KEYERROR_WRAP_CLASS).innerHTML = \"\";\n                }\n\n            }\n        });\n\n\n        if (self.valid) {\n            if (self.options.FormInvalidClass) {\n                self.nodeLink.classList.remove(AUTOFORM_FORM_INVALID_CLASS);\n            }\n            if (self.options.DeactivateSubmit) {\n                self.submit.parentNode.classList.remove(AUTOFORM_SUBMIT_INVALID_CLASS);\n                if (self.submit.attributes.disabled) {\n                    self.submit.removeAttribute(\"disabled\");\n                }\n\n            }\n        }\n        else {\n            if (self.options.FormInvalidClass) {\n                self.nodeLink.classList.remove(AUTOFORM_FORM_INVALID_CLASS);\n            }\n            if (self.options.DeactivateSubmit) {\n                self.submit.parentNode.classList.add(AUTOFORM_SUBMIT_INVALID_CLASS);\n                self.submit.setAttribute(\"disabled\", \"disabled\");\n            }\n        }\n\n        if (self.options.CancelErrorMsg) {\n            document.querySelector(self.options.CancelButton).addEventListener(\"mouseenter\", function () {\n                self.errorString = \"Будут отменены все изменения!\";\n                if (document.getElementById(AUTOFORM_KEYERROR_WRAP_CLASS).length < 1) {\n                    document.getElementById(self.options.ErrorMsgContainer).innerHTML = `<div id=\"${AUTOFORM_KEYERROR_WRAP_CLASS}\" style=\"opacity: 0\"></div>`;\n                }\n                if (self.options.EnableAnimations) {\n                    document.getElementById(AUTOFORM_KEYERROR_WRAP_CLASS).innerHTML = `<span style=\"opacity:1\">${self.errorString}</span>`;\n                }\n                else {\n                    document.getElementById(AUTOFORM_KEYERROR_WRAP_CLASS).innerHTML = `<span style=\"opacity:1\">${self.errorString}</span>`;\n                }\n            });\n            document.querySelector(self.options.CancelButton).addEventListener(\"mouseleave\", function () {\n                self.errorString = \"\";\n                if (self.options.EnableAnimations) {\n                    document.getElementById(AUTOFORM_KEYERROR_WRAP_CLASS).style.opacity = 0;\n                }\n                else {\n                    document.getElementById(AUTOFORM_KEYERROR_WRAP_CLASS).innerHTML = \"\";\n                }\n            });\n        }\n    }\n\n    /**\n     * This method just highlighting invalid fields.\n     * @param opts (off|on) off - removes highlight class from fields\n     */\n    highlightInvalidFields(opts) {\n        let self = this;\n        for (let field of self.fields) {\n            if (opts !== \"off\") {\n                if (field.validate()) {\n                    field.nodeLink.classList.remove(AUTOFORM_FIELD_INVALID_CLASS);\n                }\n                else {\n                    field.nodeLink.classList.add(AUTOFORM_FIELD_INVALID_CLASS);\n                }\n            }\n\n            if (opts === \"off\") {\n                field.nodeLink.classList.remove(AUTOFORM_FIELD_INVALID_CLASS);\n            }\n        }\n    };\n}\n\nlet autoforms = {\n    widgets: {}, // all widgets with inited autoform\n    init: function (htmlElementNode, options) {\n        if (htmlElementNode) {\n            let aufm = this,\n\n                newElementName = (htmlElementNode.className + htmlElementNode.id).toLowerCase().replace(new RegExp(\"[^[a-zA-Z0-9]]*\", \"g\"), \"_\");\n\n            if (!options) {\n                options = {};\n            }\n\n            let newAufmWidget = htmlElementNode.autoform = aufm.widgets[newElementName] = new AutoForm(htmlElementNode, options);\n            newAufmWidget.initEvents();\n        } else {\n            console.error(\"Error: trying to init autoforms on undefined node\");\n        }\n    }\n};\n(function (root, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define([], factory);\n    } else if (typeof module === \"object\" && module.exports) {\n        module.exports = factory;\n    } else {\n        root.returnExports = factory;\n    }\n}(this, autoforms));\n"]}